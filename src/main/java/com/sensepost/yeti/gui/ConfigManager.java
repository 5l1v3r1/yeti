package com.sensepost.yeti.gui;

import java.util.Random;
import javax.swing.JPanel;
import com.sensepost.yeti.FrmMain;
import com.sensepost.yeti.common.ConfigSettings;
import com.sensepost.yeti.common.UtilFunctions;
import com.sensepost.yeti.persistence.DataStore;
import com.sensepost.yeti.persistence.HibernateUtil;

/**
 *
 * @author willem
 */
public class ConfigManager extends javax.swing.JDialog {

    /**
     * Creates new form Configuration Management Dialog
     *
     * @param parent
     */
    public ConfigManager(java.awt.Frame parent) {
        super(parent, true);

        initComponents();
        setLocationRelativeTo(null);
        setModalityType(ModalityType.APPLICATION_MODAL);
        loadValues();
    }

    private void loadValues() {
        txtTldFilename.setText(ConfigSettings.getTldSourceListLocation());
        txtTldThreadCount.setValue(ConfigSettings.getTldThreadCount());
        txtFLWordlistLocation.setText(ConfigSettings.getForwardLookupBruteListLocation());
        spFLThreadCount.setValue(ConfigSettings.getForwardLookupThreadCount());
        spFLRetryCount.setValue(ConfigSettings.getForwardLookupRetryCount());
        txtWildCardDNSCheck.setText(ConfigSettings.getWildCardSubdomain());
        spRLThreadCount.setValue(ConfigSettings.getReveseLookupThreadCount());
        txtCertFetchTimeout.setValue((ConfigSettings.getCertSocketTimeout() / 1000));
        txtCertThreadCount.setValue((ConfigSettings.getCertThreadCount()));
        txtGeoIP.setText(String.valueOf(ConfigSettings.getGeoIPCityFile()));
        txtGeoIPCountry.setText(String.valueOf(ConfigSettings.getGeoIPCountryFile()));
        txtPluginDirectory.setText(ConfigSettings.getPluginDir());
        txtTldRetryCount.setValue(ConfigSettings.getTldRetryCount());
        cbxShowAtStartup.setSelected(ConfigSettings.getAlwaysShowConfigAtStartup());
        txtWhoIsTldServerFile.setText(ConfigSettings.getWhoisTldServerFile());
        int dbType = ConfigSettings.getDBType();
        cmbDatabaseType.setSelectedIndex(dbType);

        String connectionUrl = ConfigSettings.getDBUrl();
        if (dbType == 0) {
            txtDatabase.setText(connectionUrl);
            pnlDBParams.setVisible(false);
            pnlSQLiteParams.setVisible(true);
        } else {
            txtDBUrl.setText(connectionUrl);
            txtDBUser.setText(ConfigSettings.getDBUser());
            pswDbPassword.setText(ConfigSettings.getDBPassword());
            pnlDBParams.setVisible(true);
            pnlSQLiteParams.setVisible(false);
        }
    }

    private void makePanelVisible(JPanel panel) {
        pnlCert.setVisible(false);
        pnlDomainExpand.setVisible(false);
        pnlForwardLookup.setVisible(false);
        pnlGeneral.setVisible(false);
        pnlWebspider.setVisible(false);
        pnlDatabase.setVisible(false);
        panel.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tvConfigOptions = new javax.swing.JTree();
        jPanel8 = new javax.swing.JPanel();
        pnlDomainExpand = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTldFilename = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTldRetryCount = new javax.swing.JSpinner();
        txtTldThreadCount = new javax.swing.JSpinner();
        btnTldLookup = new javax.swing.JButton();
        pnlGeneral = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtGeoIP = new javax.swing.JTextField();
        btnTldLookup1 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        txtPluginDirectory = new javax.swing.JTextField();
        btnPluginDirLookup = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        txtGeoIPCountry = new javax.swing.JTextField();
        btnTldLookup2 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        txtWhoIsTldServerFile = new javax.swing.JTextField();
        btnTdlWhoisServerButton = new javax.swing.JButton();
        pnlCert = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtCertFetchTimeout = new javax.swing.JSpinner();
        txtCertThreadCount = new javax.swing.JSpinner();
        pnlWebspider = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        txtThreadCount = new javax.swing.JSpinner();
        pnlForwardLookup = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        txtFLWordlistLocation = new javax.swing.JTextField();
        btnFLLookup = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        spFLThreadCount = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        spFLRetryCount = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        spRLThreadCount = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        txtWildCardDNSCheck = new javax.swing.JTextField();
        btnGenRandomName = new javax.swing.JButton();
        pnlDatabase = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cmbDatabaseType = new javax.swing.JComboBox();
        pnlDBParams = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtDBUrl = new javax.swing.JTextField();
        txtDBUser = new javax.swing.JTextField();
        pswDbPassword = new javax.swing.JPasswordField();
        jLabel21 = new javax.swing.JLabel();
        btnTestConnection = new javax.swing.JButton();
        lblTestConnection = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        pnlSQLiteParams = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        txtDatabase = new javax.swing.JTextField();
        btnFootprintDB = new javax.swing.JButton();
        btnCreateNew = new javax.swing.JButton();
        cbxShowAtStartup = new javax.swing.JCheckBox();
        btnClose = new javax.swing.JButton();

        setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Yeti - Configuration"));

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Configuration");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("General");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Domain Expansion");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Forward/Reverse Lookup");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Certificate Extraction");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Webspider");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Database");
        treeNode1.add(treeNode2);
        tvConfigOptions.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        tvConfigOptions.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tvConfigOptionsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tvConfigOptions);

        jPanel8.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        pnlDomainExpand.setBorder(javax.swing.BorderFactory.createTitledBorder("Domain expansion"));
        pnlDomainExpand.setMaximumSize(new java.awt.Dimension(450, 284));

        jLabel1.setText("Default Top level domain list"); // NOI18N

        jLabel3.setText("Thread count"); // NOI18N

        jLabel4.setText("Retry count"); // NOI18N

        btnTldLookup.setText(".."); // NOI18N
        btnTldLookup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTldLookupMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlDomainExpandLayout = new javax.swing.GroupLayout(pnlDomainExpand);
        pnlDomainExpand.setLayout(pnlDomainExpandLayout);
        pnlDomainExpandLayout.setHorizontalGroup(
            pnlDomainExpandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDomainExpandLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDomainExpandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDomainExpandLayout.createSequentialGroup()
                        .addComponent(txtTldFilename, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTldLookup))
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addGroup(pnlDomainExpandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtTldRetryCount, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtTldThreadCount, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(429, Short.MAX_VALUE))
        );
        pnlDomainExpandLayout.setVerticalGroup(
            pnlDomainExpandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDomainExpandLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDomainExpandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTldFilename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTldLookup))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTldThreadCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTldRetryCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(159, Short.MAX_VALUE))
        );

        pnlGeneral.setBorder(javax.swing.BorderFactory.createTitledBorder("General settings"));
        pnlGeneral.setMaximumSize(new java.awt.Dimension(32767, 284));

        jLabel11.setText("Geoip City level data file"); // NOI18N

        btnTldLookup1.setText(".."); // NOI18N
        btnTldLookup1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTldLookup1MouseClicked(evt);
            }
        });

        jLabel13.setText("Plugin directory"); // NOI18N

        btnPluginDirLookup.setText(".."); // NOI18N
        btnPluginDirLookup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPluginDirLookupMouseClicked(evt);
            }
        });

        jLabel17.setText("Geoip Country level data file"); // NOI18N

        btnTldLookup2.setText(".."); // NOI18N
        btnTldLookup2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTldLookup2MouseClicked(evt);
            }
        });

        jLabel18.setText("Tld to Whois-server mapping file");

        btnTdlWhoisServerButton.setText("..");
        btnTdlWhoisServerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTdlWhoisServerButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlGeneralLayout = new javax.swing.GroupLayout(pnlGeneral);
        pnlGeneral.setLayout(pnlGeneralLayout);
        pnlGeneralLayout.setHorizontalGroup(
            pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGeneralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlGeneralLayout.createSequentialGroup()
                        .addGroup(pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlGeneralLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtGeoIP))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTldLookup1))
                    .addGroup(pnlGeneralLayout.createSequentialGroup()
                        .addGroup(pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlGeneralLayout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtGeoIPCountry, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTldLookup2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGeneralLayout.createSequentialGroup()
                        .addComponent(txtPluginDirectory)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPluginDirLookup))
                    .addGroup(pnlGeneralLayout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(0, 660, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGeneralLayout.createSequentialGroup()
                        .addGroup(pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlGeneralLayout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtWhoIsTldServerFile))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTdlWhoisServerButton)))
                .addContainerGap())
        );
        pnlGeneralLayout.setVerticalGroup(
            pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGeneralLayout.createSequentialGroup()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtGeoIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTldLookup1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtGeoIPCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTldLookup2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPluginDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPluginDirLookup))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtWhoIsTldServerFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTdlWhoisServerButton))
                .addContainerGap(184, Short.MAX_VALUE))
        );

        pnlCert.setBorder(javax.swing.BorderFactory.createTitledBorder("Cerificate extraction"));
        pnlCert.setMaximumSize(new java.awt.Dimension(450, 284));
        pnlCert.setPreferredSize(new java.awt.Dimension(450, 284));

        jLabel9.setText("HTTPS Cert fetch timeout (In seconds)"); // NOI18N
        jLabel9.setPreferredSize(new java.awt.Dimension(100, 16));

        jLabel10.setText("Threads"); // NOI18N

        javax.swing.GroupLayout pnlCertLayout = new javax.swing.GroupLayout(pnlCert);
        pnlCert.setLayout(pnlCertLayout);
        pnlCertLayout.setHorizontalGroup(
            pnlCertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCertLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCertLayout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
                        .addGap(408, 408, 408))
                    .addGroup(pnlCertLayout.createSequentialGroup()
                        .addGroup(pnlCertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(pnlCertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtCertThreadCount, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtCertFetchTimeout, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)))
                        .addContainerGap(570, Short.MAX_VALUE))))
        );
        pnlCertLayout.setVerticalGroup(
            pnlCertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCertLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCertFetchTimeout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCertThreadCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(209, Short.MAX_VALUE))
        );

        pnlWebspider.setBorder(javax.swing.BorderFactory.createTitledBorder("WebSpider"));
        pnlWebspider.setMaximumSize(new java.awt.Dimension(450, 284));

        jLabel16.setText("Webspider thread count"); // NOI18N

        javax.swing.GroupLayout pnlWebspiderLayout = new javax.swing.GroupLayout(pnlWebspider);
        pnlWebspider.setLayout(pnlWebspiderLayout);
        pnlWebspiderLayout.setHorizontalGroup(
            pnlWebspiderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlWebspiderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlWebspiderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtThreadCount, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(585, 585, 585))
        );
        pnlWebspiderLayout.setVerticalGroup(
            pnlWebspiderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlWebspiderLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtThreadCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(267, Short.MAX_VALUE))
        );

        pnlForwardLookup.setBorder(javax.swing.BorderFactory.createTitledBorder("Forward/Reverse lookups"));
        pnlForwardLookup.setMaximumSize(new java.awt.Dimension(450, 32767));
        pnlForwardLookup.setPreferredSize(new java.awt.Dimension(450, 325));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Bruteforce file location"));

        btnFLLookup.setText(".."); // NOI18N
        btnFLLookup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnFLLookupMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFLWordlistLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFLLookup)
                .addContainerGap(48, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFLWordlistLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFLLookup))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Retrys and Timeouts"));

        jLabel6.setText("Forward lookup thread count"); // NOI18N

        jLabel5.setText("Forward lookup retry count"); // NOI18N

        jLabel8.setText("Reverse lookup thread count"); // NOI18N

        jLabel7.setText("Wild card DNS check (* records)"); // NOI18N

        btnGenRandomName.setText("Generate new wild card"); // NOI18N
        btnGenRandomName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenRandomNameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(spFLRetryCount, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(spFLThreadCount, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                    .addComponent(btnGenRandomName, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                    .addComponent(spRLThreadCount, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                    .addComponent(txtWildCardDNSCheck, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(4, 4, 4)
                        .addComponent(spFLThreadCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spFLRetryCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(4, 4, 4)
                        .addComponent(spRLThreadCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtWildCardDNSCheck, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGenRandomName)))
                .addGap(67, 67, 67))
        );

        javax.swing.GroupLayout pnlForwardLookupLayout = new javax.swing.GroupLayout(pnlForwardLookup);
        pnlForwardLookup.setLayout(pnlForwardLookupLayout);
        pnlForwardLookupLayout.setHorizontalGroup(
            pnlForwardLookupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlForwardLookupLayout.setVerticalGroup(
            pnlForwardLookupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlForwardLookupLayout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlDatabase.setBorder(javax.swing.BorderFactory.createTitledBorder("Database"));
        pnlDatabase.setAlignmentX(0.0F);
        pnlDatabase.setAlignmentY(0.0F);
        pnlDatabase.setMaximumSize(new java.awt.Dimension(450, 32767));
        pnlDatabase.setName(""); // NOI18N
        pnlDatabase.setPreferredSize(new java.awt.Dimension(450, 325));

        jLabel2.setText("Database Type");
        jLabel2.setAlignmentY(0.0F);

        cmbDatabaseType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SQLite", "MySQL" }));
        cmbDatabaseType.setName("dbType"); // NOI18N
        cmbDatabaseType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbDatabaseTypeItemStateChanged(evt);
            }
        });

        pnlDBParams.setBorder(javax.swing.BorderFactory.createTitledBorder("Database Parameters"));
        pnlDBParams.setAlignmentX(0.0F);

        jLabel12.setText("Database URL");

        jLabel15.setText("User");

        jLabel19.setText("Password");

        jLabel21.setFont(new java.awt.Font("Dialog", 2, 10)); // NOI18N
        jLabel21.setText("e.g. localhost/yeti, localhost:3306/footprint, 192.168.0.1:3306/footprint_database");

        btnTestConnection.setText("Test Connection");
        btnTestConnection.setAlignmentY(0.0F);
        btnTestConnection.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTestConnectionMouseClicked(evt);
            }
        });
        btnTestConnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestConnectionActionPerformed(evt);
            }
        });

        lblTestConnection.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        lblTestConnection.setForeground(new java.awt.Color(255, 0, 51));
        lblTestConnection.setText(" ");
        lblTestConnection.setAlignmentY(0.0F);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("NOTE: The username and password for this connection is stored in clear text in a file. Please ensure that best security\npractices are followed, that the database account used only has access to the footprinting database and nothing more \nto ensure the safety of your data.");
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout pnlDBParamsLayout = new javax.swing.GroupLayout(pnlDBParams);
        pnlDBParams.setLayout(pnlDBParamsLayout);
        pnlDBParamsLayout.setHorizontalGroup(
            pnlDBParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDBParamsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDBParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlDBParamsLayout.createSequentialGroup()
                        .addGroup(pnlDBParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel19)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlDBParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDBUser, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pswDbPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDBUrl, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 362, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlDBParamsLayout.createSequentialGroup()
                        .addComponent(lblTestConnection)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnTestConnection)))
                .addContainerGap())
        );
        pnlDBParamsLayout.setVerticalGroup(
            pnlDBParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDBParamsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDBParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtDBUrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDBParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlDBParamsLayout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlDBParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDBUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pswDbPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlDBParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTestConnection)
                    .addComponent(btnTestConnection))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlSQLiteParams.setBorder(javax.swing.BorderFactory.createTitledBorder("SQLite Parameters"));
        pnlSQLiteParams.setAlignmentX(0.0F);
        pnlSQLiteParams.setAlignmentY(0.0F);

        jLabel14.setText("Default database"); // NOI18N

        btnFootprintDB.setText(".."); // NOI18N
        btnFootprintDB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnFootprintDBMouseClicked(evt);
            }
        });
        btnFootprintDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFootprintDBActionPerformed(evt);
            }
        });

        btnCreateNew.setText("Create new"); // NOI18N
        btnCreateNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateNewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSQLiteParamsLayout = new javax.swing.GroupLayout(pnlSQLiteParams);
        pnlSQLiteParams.setLayout(pnlSQLiteParamsLayout);
        pnlSQLiteParamsLayout.setHorizontalGroup(
            pnlSQLiteParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSQLiteParamsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSQLiteParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addGroup(pnlSQLiteParamsLayout.createSequentialGroup()
                        .addComponent(txtDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnFootprintDB))
                    .addComponent(btnCreateNew))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlSQLiteParamsLayout.setVerticalGroup(
            pnlSQLiteParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSQLiteParamsLayout.createSequentialGroup()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlSQLiteParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFootprintDB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCreateNew)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlDatabaseLayout = new javax.swing.GroupLayout(pnlDatabase);
        pnlDatabase.setLayout(pnlDatabaseLayout);
        pnlDatabaseLayout.setHorizontalGroup(
            pnlDatabaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatabaseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDatabaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlDBParams, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlDatabaseLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbDatabaseType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(pnlSQLiteParams, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlDatabaseLayout.setVerticalGroup(
            pnlDatabaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatabaseLayout.createSequentialGroup()
                .addGroup(pnlDatabaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbDatabaseType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlSQLiteParams, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlDBParams, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pnlDomainExpand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pnlCert, javax.swing.GroupLayout.DEFAULT_SIZE, 781, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pnlWebspider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pnlForwardLookup, javax.swing.GroupLayout.DEFAULT_SIZE, 781, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(pnlDatabase, javax.swing.GroupLayout.DEFAULT_SIZE, 781, Short.MAX_VALUE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pnlDomainExpand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pnlCert, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pnlWebspider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pnlForwardLookup, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(pnlDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, 402, Short.MAX_VALUE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, 0, 404, Short.MAX_VALUE)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        cbxShowAtStartup.setText("Show On Startup");

        btnClose.setText("Close");
        btnClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCloseMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbxShowAtStartup)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 755, Short.MAX_VALUE)
                .addComponent(btnClose)
                .addContainerGap())
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxShowAtStartup)
                    .addComponent(btnClose))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tvConfigOptionsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tvConfigOptionsMouseClicked
        if (tvConfigOptions.getLastSelectedPathComponent() != null) {
            String itemSelected = tvConfigOptions.getLastSelectedPathComponent().toString();
            if (itemSelected.compareTo("General") == 0) {
                this.makePanelVisible(this.pnlGeneral);
            } else if (itemSelected.compareTo("Forward/Reverse Lookup") == 0) {
                this.makePanelVisible(this.pnlForwardLookup);
            } else if (itemSelected.compareTo("Certificate Extraction") == 0) {
                this.makePanelVisible(this.pnlCert);
            } else if (itemSelected.compareTo("Webspider") == 0) {
                this.makePanelVisible(this.pnlWebspider);
            } else if (itemSelected.compareTo("Domain Expansion") == 0) {
                this.makePanelVisible(this.pnlDomainExpand);
            } else if (itemSelected.compareTo("Database") == 0) {
                this.makePanelVisible(this.pnlDatabase);
            }
        }
    }//GEN-LAST:event_tvConfigOptionsMouseClicked

    private void btnTldLookupMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTldLookupMouseClicked
        txtTldFilename.setText(UtilFunctions.openFile("*.*"));        // TODO add your handling code here:
    }//GEN-LAST:event_btnTldLookupMouseClicked

    private void btnTldLookup1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTldLookup1MouseClicked
        txtGeoIP.setText(UtilFunctions.openFile("*.*"));        // TODO add your handling code here:
    }//GEN-LAST:event_btnTldLookup1MouseClicked

    private void jLinkButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLinkButton1ActionPerformed
        UtilFunctions.launchBrowser("http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz");
    }//GEN-LAST:event_jLinkButton1ActionPerformed

    private void btnPluginDirLookupMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPluginDirLookupMouseClicked
        txtPluginDirectory.setText(UtilFunctions.getDirectory());
    }//GEN-LAST:event_btnPluginDirLookupMouseClicked

    private void jLinkButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLinkButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jLinkButton2ActionPerformed

    private void btnTldLookup2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTldLookup2MouseClicked
        txtGeoIPCountry.setText(UtilFunctions.openFile("*.*"));
    }//GEN-LAST:event_btnTldLookup2MouseClicked

    private void btnTdlWhoisServerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTdlWhoisServerButtonActionPerformed
        txtWhoIsTldServerFile.setText(UtilFunctions.openFile("*.*"));
    }//GEN-LAST:event_btnTdlWhoisServerButtonActionPerformed

    private void btnFLLookupMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFLLookupMouseClicked
        txtFLWordlistLocation.setText(UtilFunctions.getDirectory());        // TODO add your handling code here:
    }//GEN-LAST:event_btnFLLookupMouseClicked

    private void btnGenRandomNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenRandomNameActionPerformed
        String result = "";
        Random randomGenerator = new Random();
        for (int idx = 1; idx <= 26; ++idx) {
            int randomInt = randomGenerator.nextInt(25);
            result = result + Character.toChars(97 + randomInt)[0];
        }
        txtWildCardDNSCheck.setText(result);
    }//GEN-LAST:event_btnGenRandomNameActionPerformed

    private void btnCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseMouseClicked
        /*if (txtTldFilename.getText().isEmpty()) {
         JOptionPane.showMessageDialog(rootPane, "Please select a default tld file.", "Selection required", JOptionPane.WARNING_MESSAGE);
         return;
         }

         }
         if (txtFLWordlistLocation.getText().isEmpty()) {
         JOptionPane.showMessageDialog(rootPane, "Please select forwardlookup bruteforce lists location.", "Selection required", JOptionPane.WARNING_MESSAGE);
         return;
         }*/

        /*if (txtGeoIP.getText().isEmpty()){
         JOptionPane.showMessageDialog(rootPane, "Please select location of the GeoIP lookup database file.", "Selection required", JOptionPane.WARNING_MESSAGE);
         return;
         }*/

        ConfigSettings.setCertSocketTimeout((Integer) txtCertFetchTimeout.getValue() * 1000);
        ConfigSettings.setCertThreadCount((Integer) txtCertThreadCount.getValue());
        ConfigSettings.setForwardLookupBruteListLocation(txtFLWordlistLocation.getText());
        ConfigSettings.setForwardLookupThreadCount((Integer) spFLThreadCount.getValue());
        ConfigSettings.setForwordLookupRetryCount((Integer) spFLRetryCount.getValue());
        ConfigSettings.setReverseLookupThreadCount(Integer.parseInt(spRLThreadCount.getValue().toString()));
        ConfigSettings.setTldSourceListLocation(txtTldFilename.getText());
        ConfigSettings.setTldThreadCount((Integer) txtTldThreadCount.getValue());
        ConfigSettings.setWildCardSubdomain(txtWildCardDNSCheck.getText());
        ConfigSettings.setgetIPCiryFile(txtGeoIP.getText());
        ConfigSettings.setgetIPCountryFile(txtGeoIPCountry.getText());
        ConfigSettings.setPluginDir(txtPluginDirectory.getText());
        ConfigSettings.setTldRetryCount(Integer.parseInt(txtTldRetryCount.getValue().toString()));
        ConfigSettings.setAlwaysShowConfigAtStartup(cbxShowAtStartup.isSelected());
        ConfigSettings.setWhoisTldServerFile(txtWhoIsTldServerFile.getText());
        
        int dbType = cmbDatabaseType.getSelectedIndex();
        String dbUrl = null;
        if (dbType == 0) {
            dbUrl = txtDatabase.getText();
        } else if (dbType == 1) {
            dbUrl = txtDBUrl.getText();
        }
        
        ConfigSettings.setDBType(dbType);
        ConfigSettings.setDBUrl(dbUrl);
        ConfigSettings.setDBUser(txtDBUser.getText() == null ? "" : txtDBUser.getText());
        ConfigSettings.setDBPassword(pswDbPassword.getPassword() == null ? "" : new String(pswDbPassword.getPassword()));

        ConfigSettings.saveChanges();

        if (dbType != 0) {
            if (testDatabaseConnection()) {
                this.setVisible(false);
            }
        } else {
            this.setVisible(false);
        }

        FrmMain parent = (FrmMain) getParent();
        if (parent.isVisible()) {
            parent.changeDatabase(txtDBUrl.getText());
        }
    }//GEN-LAST:event_btnCloseMouseClicked

    private void btnTestConnectionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTestConnectionMouseClicked
        testDatabaseConnection();
    }//GEN-LAST:event_btnTestConnectionMouseClicked

    private void cmbDatabaseTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbDatabaseTypeItemStateChanged
        int select = cmbDatabaseType.getSelectedIndex();
        ConfigSettings.setDBType(select);
        String connectionUrl = ConfigSettings.getDBUrl();
        if (select == 0) {
            txtDatabase.setText(connectionUrl);
            txtDBUrl.setText(null);
            txtDBUser.setText(null);
            pswDbPassword.setText(null);
            pnlDBParams.setVisible(false);
            pnlSQLiteParams.setVisible(true);
        } else {
            txtDatabase.setText(null);
            txtDBUrl.setText(connectionUrl);
            txtDBUser.setText(ConfigSettings.getDBUser());
            pswDbPassword.setText(ConfigSettings.getDBPassword());
            pnlDBParams.setVisible(true);
            pnlSQLiteParams.setVisible(false);
        }
    }//GEN-LAST:event_cmbDatabaseTypeItemStateChanged

    private void btnCreateNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateNewActionPerformed
        String dbName = UtilFunctions.saveFile(".db");
        if (!dbName.isEmpty()) {
            txtDatabase.setText(dbName);
        }
    }//GEN-LAST:event_btnCreateNewActionPerformed

    private void btnFootprintDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFootprintDBActionPerformed
        txtDatabase.setText(UtilFunctions.openFile("*.*"));
    }//GEN-LAST:event_btnFootprintDBActionPerformed

    private void btnFootprintDBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFootprintDBMouseClicked

    }//GEN-LAST:event_btnFootprintDBMouseClicked

    private void btnTestConnectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestConnectionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTestConnectionActionPerformed

    private boolean testDatabaseConnection() {
        int dbType = cmbDatabaseType.getSelectedIndex();
        ConfigSettings.setDBType(dbType);

        if (dbType == 0) {
            ConfigSettings.setDBUrl(txtDatabase.getText());
        } else if (dbType == 1) {
            ConfigSettings.setDBUrl(txtDBUrl.getText());
        }
        ConfigSettings.setDBUser(txtDBUser.getText());
        ConfigSettings.setDBPassword(pswDbPassword.getPassword() == null ? null : new String(pswDbPassword.getPassword()));

        HibernateUtil.resetSession();

        if (DataStore.testConnection()) {
            lblTestConnection.setText("Successfully connected to the database");
            return true;
        } else {
            lblTestConnection.setText("Cannot connect to the database!");
            makePanelVisible(pnlDatabase);
            return false;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConfigManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConfigManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConfigManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConfigManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                ConfigManager dialog = new ConfigManager(new javax.swing.JFrame());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnCreateNew;
    private javax.swing.JButton btnFLLookup;
    private javax.swing.JButton btnFootprintDB;
    private javax.swing.JButton btnGenRandomName;
    private javax.swing.JButton btnPluginDirLookup;
    private javax.swing.JButton btnTdlWhoisServerButton;
    private javax.swing.JButton btnTestConnection;
    private javax.swing.JButton btnTldLookup;
    private javax.swing.JButton btnTldLookup1;
    private javax.swing.JButton btnTldLookup2;
    private javax.swing.JCheckBox cbxShowAtStartup;
    private javax.swing.JComboBox cmbDatabaseType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lblTestConnection;
    private javax.swing.JPanel pnlCert;
    private javax.swing.JPanel pnlDBParams;
    private javax.swing.JPanel pnlDatabase;
    private javax.swing.JPanel pnlDomainExpand;
    private javax.swing.JPanel pnlForwardLookup;
    private javax.swing.JPanel pnlGeneral;
    private javax.swing.JPanel pnlSQLiteParams;
    private javax.swing.JPanel pnlWebspider;
    private javax.swing.JPasswordField pswDbPassword;
    private javax.swing.JSpinner spFLRetryCount;
    private javax.swing.JSpinner spFLThreadCount;
    private javax.swing.JSpinner spRLThreadCount;
    private javax.swing.JTree tvConfigOptions;
    private javax.swing.JSpinner txtCertFetchTimeout;
    private javax.swing.JSpinner txtCertThreadCount;
    private javax.swing.JTextField txtDBUrl;
    private javax.swing.JTextField txtDBUser;
    private javax.swing.JTextField txtDatabase;
    private javax.swing.JTextField txtFLWordlistLocation;
    private javax.swing.JTextField txtGeoIP;
    private javax.swing.JTextField txtGeoIPCountry;
    private javax.swing.JTextField txtPluginDirectory;
    private javax.swing.JSpinner txtThreadCount;
    private javax.swing.JTextField txtTldFilename;
    private javax.swing.JSpinner txtTldRetryCount;
    private javax.swing.JSpinner txtTldThreadCount;
    private javax.swing.JTextField txtWhoIsTldServerFile;
    private javax.swing.JTextField txtWildCardDNSCheck;
    // End of variables declaration//GEN-END:variables
}
